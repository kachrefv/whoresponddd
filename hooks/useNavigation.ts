import { useState, useEffect, useCallback } from 'react';import { useRouter } from 'next/navigation';export function useNavigation() {  const router = useRouter();  const [currentPage, setCurrentPage] = useState('home');  const navigateTo = useCallback((page: string, anchor: string | null = null) => {    setCurrentPage(page);    let hash = page;    if (anchor) {      hash = `${page}#${anchor}`;    }    router.push(`/${page === 'home' ? '' : page}${anchor ? `#${anchor}` : ''}`);    // Manually update hash for same-page anchors without full reload    if (page === 'home' && anchor) {      setTimeout(() => {        const el = document.getElementById(anchor);        if (el) {          el.scrollIntoView({ behavior: 'smooth' });        }      }, 0);    }  }, [router]);  useEffect(() => {    const handleHashChange = () => {      const hash = window.location.hash.substring(1);      if (['login', 'register', 'reset-password', 'dashboard'].includes(hash)) {        setCurrentPage(hash);      } else if (['features', 'pricing', 'faq'].includes(hash)) {        setCurrentPage('home');        // Scroll to the section after the next tick to ensure it's rendered        setTimeout(() => {          const el = document.getElementById(hash);          if (el) {            el.scrollIntoView({ behavior: 'smooth' });          }        }, 0);      } else {        setCurrentPage('home');      }    };    // Initial load    handleHashChange();    window.addEventListener('hashchange', handleHashChange);    return () => {      window.removeEventListener('hashchange', handleHashChange);    };  }, []);  return { currentPage, navigateTo };}