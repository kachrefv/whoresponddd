import { NextResponse } from 'next/server';import bcrypt from 'bcrypt';import prisma from '@/lib/prisma';export async function POST(request: Request) {  try {    const body = await request.json();    const { name, email, password } = body;    if (!name || !email || !password) {      return new NextResponse('Missing fields', { status: 400 });    }    const existingUser = await prisma.user.findUnique({      where: { email },    });    if (existingUser) {      return new NextResponse('User with this email already exists', { status: 409 });    }    const hashedPassword = await bcrypt.hash(password, 12);    const user = await prisma.user.create({      data: {        name,        email,        hashedPassword,      },    });    return NextResponse.json(user, { status: 201 });  } catch (error) {    console.error('Registration error:', error);    return new NextResponse('Internal Server Error', { status: 500 });  }}