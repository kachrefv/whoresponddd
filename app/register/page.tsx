'use client';import React, { useState } from 'react';import Link from 'next/link';import { useRouter } from 'next/navigation';import Input from '@/components/ui/Input';import Button from '@/components/ui/Button';import { useNavigation } from '@/hooks/useNavigation';const RegisterPage: React.FC = () => {  const [name, setName] = useState('');  const [email, setEmail] = useState('');  const [password, setPassword] = useState('');  const [confirmPassword, setConfirmPassword] = useState('');  const [error, setError] = useState<string | null>(null);  const router = useRouter();  const { navigateTo } = useNavigation();  const handleSubmit = async (e: React.FormEvent) => {    e.preventDefault();    setError(null);    if (password !== confirmPassword) {      setError('Passwords do not match');      return;    }    try {      const response = await fetch('/api/register', {        method: 'POST',        headers: {          'Content-Type': 'application/json',        },        body: JSON.stringify({ name, email, password }),      });      if (!response.ok) {        const data = await response.json();        throw new Error(data.message || 'Registration failed');      }      router.push('/login?success=registered');    } catch (err: any) {      setError(err.message || 'An unexpected error occurred');    }  };  return (    <section id="register" className="py-20 sm:py-24 lg:py-32">      <div className="container mx-auto px-4 sm:px-6 lg:px-8 max-w-md">        <div className="bg-ios-panel dark:bg-ios-panel-dark p-8 rounded-2xl shadow-lg border border-ios-border dark:border-ios-border-dark text-center">          <h2 className="text-3xl font-bold tracking-tight mb-6">            Create Your Elijeweb Account          </h2>          {error && (            <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative mb-4">              <span className="block sm:inline">{error}</span>            </div>          )}          <form className="space-y-6" onSubmit={handleSubmit}>            <Input              id="register-name"              name="name"              type="text"              autoComplete="name"              required              placeholder="Full Name"              value={name}              onChange={(e) => setName(e.target.value)}            />            <Input              id="register-email"              name="email"              type="email"              autoComplete="email"              required              placeholder="Email address"              value={email}              onChange={(e) => setEmail(e.target.value)}            />            <Input              id="register-password"              name="password"              type="password"              autoComplete="new-password"              required              placeholder="Password"              value={password}              onChange={(e) => setPassword(e.target.value)}            />            <Input              id="register-confirm-password"              name="confirm-password"              type="password"              autoComplete="new-password"              required              placeholder="Confirm Password"              value={confirmPassword}              onChange={(e) => setConfirmPassword(e.target.value)}            />            <Button type="submit" className="w-full">              Register            </Button>          </form>          <p className="mt-6 text-sm text-ios-text-secondary dark:text-ios-text-secondary-dark">            Already have an account?            <Link              href="/login"              onClick={() => navigateTo('login')}              className="font-medium text-ios-blue hover:text-opacity-80 transition-colors"            >              Login here            </Link>          </p>        </div>      </div>    </section>  );};export default RegisterPage;