'use client';import React, { useState } from 'react';import Link from 'next/link';import { signIn } from 'next-auth/react';import { useRouter } from 'next/navigation';import Input from '@/components/ui/Input';import Button from '@/components/ui/Button';import { useNavigation } from '@/hooks/useNavigation';const LoginPage: React.FC = () => {  const [email, setEmail] = useState('');  const [password, setPassword] = useState('');  const [error, setError] = useState<string | null>(null);  const router = useRouter();  const { navigateTo } = useNavigation();  const handleSubmit = async (e: React.FormEvent) => {    e.preventDefault();    setError(null);    const result = await signIn('credentials', {      redirect: false,      email,      password,    });    if (result?.error) {      setError(result.error);    } else {      router.push('/dashboard');    }  };  return (    <section      id="login"      className="py-20 sm:py-24 lg:py-32 bg-ios-panel-contrast dark:bg-ios-panel-contrast-dark/20"    >      <div className="container mx-auto px-4 sm:px-6 lg:px-8 max-w-md">        <div className="bg-ios-panel dark:bg-ios-panel-dark p-8 rounded-2xl shadow-lg border border-ios-border dark:border-ios-border-dark text-center">          <h2 className="text-3xl font-bold tracking-tight mb-6">Login to Elijeweb</h2>          {error && (            <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative mb-4">              <span className="block sm:inline">{error}</span>            </div>          )}          <form className="space-y-6" onSubmit={handleSubmit}>            <Input              id="login-email"              name="email"              type="email"              autoComplete="email"              required              placeholder="Email address"              value={email}              onChange={(e) => setEmail(e.target.value)}            />            <Input              id="login-password"              name="password"              type="password"              autoComplete="current-password"              required              placeholder="Password"              value={password}              onChange={(e) => setPassword(e.target.value)}            />            <div className="flex items-center justify-between">              <div className="text-sm">                <Link                  href="/reset-password"                  onClick={() => navigateTo('reset-password')}                  className="font-medium text-ios-blue hover:text-opacity-80 transition-colors"                >                  Forgot your password?                </Link>              </div>            </div>            <Button type="submit" className="w-full">              Login            </Button>          </form>          <p className="mt-6 text-sm text-ios-text-secondary dark:text-ios-text-secondary-dark">            Don&apos;t have an account?            <Link              href="/register"              onClick={() => navigateTo('register')}              className="font-medium text-ios-blue hover:text-opacity-80 transition-colors"            >              Register here            </Link>          </p>        </div>      </div>    </section>  );};export default LoginPage;